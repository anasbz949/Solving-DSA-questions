class Solution {
public:
    bool maxEatingspeed(vector<int>& piles, int mid, int h) {
        int hours = 0;

        for (int& x : piles) {
            hours += x / mid;

            if (x % mid != 0) {
                hours++;
            }
        }
        return hours <= h;
    }

    int minEatingSpeed(vector<int>& piles, int h) {
        int n = piles.size();

        int l = 1;
        int r = *max_element(begin(piles), end(piles));

        while (l < r) {
            int mid = l + (r - l) / 2;

            if (maxEatingspeed(piles, mid, h)) {
                r = mid;
            } else {
                l = mid + 1;
            }
        }
        return l;
    }
};
